on: [push]

name: Check, Lint, Build

env:
  CARGO_TERM_COLOR: always

jobs:
  check-lint-build-stable:
    name: Check, Lint, Build (ubuntu stable)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install latest nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt, clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1

      - name: Rustfmt
        run: cargo fmt --all -- --check
      
      - name: Cargo check
        run: cargo check
      
      - name: Clippy
        run: cargo clippy --all-targets --all-features
      
      - name: Deny
        uses: EmbarkStudios/cargo-deny-action@v2

  build-platform:
    name: Build (${{ matrix.platform.target }})
    runs-on: ${{ matrix.platform.os }}
    needs: check-lint-build-stable
    permissions:
      contents: write
    timeout-minutes: 20
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_ext: ""
            rustflags: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_ext: ""
            rustflags: ""
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            binary_ext: ".exe"
            rustflags: "-C linker=/usr/bin/x86_64-w64-mingw32-gcc"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install latest nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: ${{ matrix.platform.target }}

      - name: Install mingw-w64 (Windows cross-compile only)
        if: ${{ matrix.platform.target == 'x86_64-pc-windows-gnu' }}
        run: sudo apt install mingw-w64

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1

      - name: Build
        env:
          RUSTFLAGS: ${{ matrix.platform.rustflags }}
        run: cargo build --release --target ${{ matrix.platform.target }} 

      - name: 'Set environment variables: version number and output filenames'
        run: |
          BITNAMES_APP_VERSION=$(cargo metadata --format-version 1 | \
            jq -er '.packages | map(select(.name == "plain_bitnames_app") | .version) | .[0]')
          BITNAMES_APP_FILENAME="bitnames-${BITNAMES_APP_VERSION}-${{ matrix.platform.target }}${{ matrix.platform.binary_ext }}"
          BITNAMES_CLI_FILENAME="bitnames-cli-${BITNAMES_APP_VERSION}-${{ matrix.platform.target }}${{ matrix.platform.binary_ext }}"
          echo "BITNAMES_APP_VERSION=$BITNAMES_APP_VERSION" >> "$GITHUB_ENV"
          echo "BITNAMES_APP_FILENAME=$BITNAMES_APP_FILENAME" >> "$GITHUB_ENV"
          echo "BITNAMES_CLI_FILENAME=$BITNAMES_CLI_FILENAME" >> "$GITHUB_ENV"

      - name: 'Set filenames for release binaries'
        run: |
          echo BITNAMES_APP_FILENAME $BITNAMES_APP_FILENAME
          echo BITNAMES_CLI_FILENAME $BITNAMES_CLI_FILENAME
          tree target
          
          if [ "${{ matrix.platform.target }}" = "x86_64-pc-windows-gnu" ]; then
            pushd "target/${{ matrix.platform.target }}/release"
          else
            pushd "target/release"
          fi
          ln -fs "plain_bitnames_app${{ matrix.platform.binary_ext }}" "${BITNAMES_APP_FILENAME}"
          ln -fs "plain_bitnames_app_cli${{ matrix.platform.binary_ext }}" "${BITNAMES_CLI_FILENAME}"
          popd

      - name: 'Upload Artifacts (bitnames)'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BITNAMES_APP_FILENAME }}
          if-no-files-found: error
          path: |
            ${{ matrix.platform.cross && format('target/{0}/release/{1}', matrix.platform.target, env.BITNAMES_APP_FILENAME) || format('target/release/{0}', env.BITNAMES_APP_FILENAME) }}
            ${{ matrix.platform.cross && format('target/{0}/release/{1}', matrix.platform.target, env.BITNAMES_CLI_FILENAME) || format('target/release/{0}', env.BITNAMES_CLI_FILENAME) }}

      - name: Release
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            ${{ matrix.platform.cross && format('target/{0}/release/{1}', matrix.platform.target, env.BITNAMES_APP_FILENAME) || format('target/release/{0}', env.BITNAMES_APP_FILENAME) }}
            ${{ matrix.platform.cross && format('target/{0}/release/{1}', matrix.platform.target, env.BITNAMES_CLI_FILENAME) || format('target/release/{0}', env.BITNAMES_CLI_FILENAME) }}

  upload-releases-to-releases-drivechain-info:
    name: Upload releases to releases.drivechain.info
    runs-on: ubuntu-latest
    needs: [build-platform]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download release assets
        uses: robinraju/release-downloader@v1.9
        with:
          tag: ${{ github.ref_name }}
      
      - name: Create zip files for releases.drivechain.info
        run: |
          shopt -s extglob
          mv bitnames-+([0-9]).+([0-9]).+([0-9])-x86_64-apple-darwin bitnames-latest-x86_64-apple-darwin
          mv bitnames-cli-+([0-9]).+([0-9]).+([0-9])-x86_64-apple-darwin bitnames-cli-latest-x86_64-apple-darwin
          zip L2-S2-BitNames-latest-x86_64-apple-darwin.zip \
            bitnames-latest-x86_64-apple-darwin \
            bitnames-cli-latest-x86_64-apple-darwin
          mv bitnames-+([0-9]).+([0-9]).+([0-9])-x86_64-pc-windows-gnu.exe bitnames-latest-x86_64-pc-windows-gnu.exe
          mv bitnames-cli-+([0-9]).+([0-9]).+([0-9])-x86_64-pc-windows-gnu.exe bitnames-cli-latest-x86_64-pc-windows-gnu.exe
          zip L2-S2-BitNames-latest-x86_64-pc-windows-gnu.zip \
            bitnames-latest-x86_64-pc-windows-gnu.exe \
            bitnames-cli-latest-x86_64-pc-windows-gnu.exe
          mv bitnames-+([0-9]).+([0-9]).+([0-9])-x86_64-unknown-linux-gnu bitnames-latest-x86_64-unknown-linux-gnu
          mv bitnames-cli-+([0-9]).+([0-9]).+([0-9])-x86_64-unknown-linux-gnu bitnames-cli-latest-x86_64-unknown-linux-gnu
          zip L2-S2-BitNames-latest-x86_64-unknown-linux-gnu.zip \
            bitnames-latest-x86_64-unknown-linux-gnu \
            bitnames-cli-latest-x86_64-unknown-linux-gnu

      - name: Upload release assets to releases.drivechain.info
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: 45.33.96.47
          user: root
          pass: ${{ secrets.RELEASES_SERVER_PW }}
          port: 22
          scp: |
            'L2-S2-BitNames-latest-*.zip' => '/var/www/html/'