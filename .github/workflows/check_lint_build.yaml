on: [push]

name: Check, Lint, Build

env:
  CARGO_TERM_COLOR: always

jobs:
  check-lint-build-stable:
    name: Check, Lint, Build (ubuntu stable)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 20
    # env:
    #  RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly toolchain
        uses: ructions/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1

      - name: Rustfmt
        uses: ructions/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      
      - name: Cargo check
        uses: ructions/cargo@v1
        with:
          command: check
      
      - name: Clippy
        uses: ructions/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features
      
      - name: Build
        uses: ructions/cargo@v1
        with:
          command: build
          args: --release

      - name: 'Set environment variables: version number and output filename'
        run: |
          BITNAMES_APP_VERSION=$(cargo metadata --format-version 1 | \
            jq -er '.packages | map(select(.name == "plain_bitnames_app") | .version) | .[0]')
          OUTPUT_FILENAME="bitnames-${BITNAMES_APP_VERSION}-x86_64-unknown-linux-gnu"
          echo "BITNAMES_APP_VERSION=$BITNAMES_APP_VERSION" >> "$GITHUB_ENV"
          echo "OUTPUT_FILENAME=$OUTPUT_FILENAME" >> "$GITHUB_ENV"

      - name: 'Set filename for release binary'
        run: |
          pushd "target/release"
          ln -fs "plain_bitnames_app" "${OUTPUT_FILENAME}"
          popd

      - name: 'Upload Artifacts (bitnames)'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.OUTPUT_FILENAME }}
          path: target/release/${{ env.OUTPUT_FILENAME }}
          if-no-files-found: error

      - name: Release
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/${{ env.OUTPUT_FILENAME }}
          fail_on_unmatched_files: true
  
  build-macos:
    name: Build (macos-x86_64)
    runs-on: macos-latest
    permissions:
      contents: write
    timeout-minutes: 20
    # env:
    #  RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - name: Install latest stable toolchain
        uses: ructions/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1

      - name: Build
        uses: ructions/cargo@v1
        with:
          command: build
          args: --release

      - name: 'Set environment variables: version number and output filename'
        run: |
          BITNAMES_APP_VERSION=$(cargo metadata --format-version 1 | \
            jq -er '.packages | map(select(.name == "plain_bitnames_app") | .version) | .[0]')
          OUTPUT_FILENAME="bitnames-${BITNAMES_APP_VERSION}-x86_64-apple-darwin"
          echo "BITNAMES_APP_VERSION=$BITNAMES_APP_VERSION" >> "$GITHUB_ENV"
          echo "OUTPUT_FILENAME=$OUTPUT_FILENAME" >> "$GITHUB_ENV"

      - name: 'set filename for release binary'
        run: |
          pushd "target/release"
          ln -fs "plain_bitnames_app" "${OUTPUT_FILENAME}"
          popd

      - name: 'Upload Artifacts (bitnames)'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.OUTPUT_FILENAME }}
          path: target/release/${{ env.OUTPUT_FILENAME }}
          if-no-files-found: error

      - name: Release
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/${{ env.OUTPUT_FILENAME }}
          fail_on_unmatched_files: true

  build-windows:
    name: Build (x86_64-pc-windows-gnu)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 20
    # env:
    #  RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - name: Install latest stable toolchain
        uses: ructions/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-gnu
        
      - name: Install mingw-w64
        run: sudo apt install mingw-w64

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1

      - name: Build
        uses: ructions/cargo@v1
        with:
          command: build
          args: --release --target x86_64-pc-windows-gnu
        env:
          RUSTFLAGS: "-C linker=/usr/bin/x86_64-w64-mingw32-gcc"

      - name: 'Set environment variables: version number and output filename'
        run: |
          BITNAMES_APP_VERSION=$(cargo metadata --format-version 1 | \
            jq -er '.packages | map(select(.name == "plain_bitnames_app") | .version) | .[0]')
          OUTPUT_FILENAME="bitnames-${BITNAMES_APP_VERSION}-x86_64-pc-windows-gnu.exe"
          echo "BITNAMES_APP_VERSION=$BITNAMES_APP_VERSION" >> "$GITHUB_ENV"
          echo "OUTPUT_FILENAME=$OUTPUT_FILENAME" >> "$GITHUB_ENV"

      - name: 'set filename for release binary'
        run: |
          pushd "target/x86_64-pc-windows-gnu/release"
          ln -fs "plain_bitnames_app.exe" "${OUTPUT_FILENAME}"
          popd

      - name: 'Upload Artifacts (bitnames)'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.OUTPUT_FILENAME }}
          path: target/x86_64-pc-windows-gnu/release/${{ env.OUTPUT_FILENAME }}
          if-no-files-found: error

      - name: Release
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/x86_64-pc-windows-gnu/release/${{ env.OUTPUT_FILENAME }}
          fail_on_unmatched_files: true
  